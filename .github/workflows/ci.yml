name: CI

on:
  push:
  repository_dispatch:
    types: [merge-content]

concurrency: deploy_preview

env:
  EC_IS_MAIN_PUSH: ${{github.event_name == 'push' && github.ref_name == 'static'}}
  EC_IS_DEV_PREVIEW: ${{github.event_name == 'push' && github.ref_name != 'static'}}
  EC_IS_EDIT_PREVIEW: ${{github.event_name != 'push'}}
  EC_SET_BASE: ${{((github.event_name == 'push' && github.ref_name == 'static') && '/') || ((github.event_name == 'push' && github.ref_name != 'static') && '/${{github.ref_name}}/') || ((github.event_name != 'push') && '/${{github.event.client_payload.branch}}/')}}
  EC_TARGET_DEPLOY: ${{((github.event_name == 'push' && github.ref_name == 'static') || 'www') || ((github.event_name == 'push' && github.ref_name != 'static') || 'dev') || ((github.event_name != 'push') || 'preview')}}
  EC_WITH_LH: ${{github.event_name == 'push'}}

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Install dependencies
        run: yarn
      - name: Build
        run: yarn build
      - name: Generate
        run: yarn generate
      - name: Symlinks
        run: |
          cp -r ./cms-content/static/blog ./_blog
          cp -r ./cms-content/static/veranstaltungen ./_veranstaltungen
          cp -r ./cms-content/static/download ./_download
          cp -r ./cms-content/static/old ./_old
          rm -r ./dist/blog
          rm -r ./dist/veranstaltungen
          rm -r ./dist/download
          cp -r ./_blog ./dist/blog
          cp -r ./_veranstaltungen ./dist/veranstaltungen
          cp -r ./_download ./dist/download
          cp -r ./_old ./dist/old
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ./dist/
          retention-days: 1
  deploy:
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: ./dist
        
      - name: Deploy to ec-nordbund.de
        env:
          dest: 'deployer@ec-nordbund.de:/samba_share/preview.ec-nordbund.de/${{ github.event.client_payload.branch }}'
        run: |
          echo "${{secrets.DEPLOY_KEY}}" > deploy_key
          chmod 600 ./deploy_key
          ssh -i ./deploy_key -o StrictHostKeyChecking=no deployer@ec-nordbund.de "/bin/mkdir -p /samba_share/${{EC_TARGET_DEPLOY}}.ec-nordbund.de${{EC_SET_BASE}}"
          rsync -chrvz --stats --delete \
            -e 'ssh -i ./deploy_key -o StrictHostKeyChecking=no' \
            ./dist/ ${{ env.dest }}
  
  lh_deploy:
    runs-on: ubuntu-latest
    needs: [ build ]
    if: ${{EC_WITH_LH}}
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: ./dist
        
      - name: Deploy to ec-nordbund.de
        env:
          dest: 'deployer@ec-nordbund.de:/samba_share/preview.ec-nordbund.de/${{ github.event.client_payload.branch }}'
        run: |
          echo "${{secrets.DEPLOY_KEY}}" > deploy_key
          chmod 600 ./deploy_key
          ssh -i ./deploy_key -o StrictHostKeyChecking=no deployer@ec-nordbund.de "/bin/mkdir -p /samba_share/lighthouse.ec-nordbund.de"
          rsync -chrvz --stats --delete \
            -e 'ssh -i ./deploy_key -o StrictHostKeyChecking=no' \
            ./dist/ ${{ env.dest }}  
    
  lh_runner:
    runs-on: ubuntu-latest
    needs: [ lh_deploy ]
    steps:
      - uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: checkout
        uses: actions/checkout@v2

      - name: Install dependencies
        run: yarn

      - name: Lighthouse Audits
        run: |
          yarn lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{secrets.LHCI_GITHUB_APP_TOKEN}}
          LHCI_TOKEN: ${{secrets.LHCI_TOKEN}}
          CI: true
